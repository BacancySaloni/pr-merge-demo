name: Update persistent envs develop branches
on:
  push:
    branches:
      - main
jobs:
  updateDevelopBranches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch branches with open PRs and trigger workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.YOUR_PAT_SECRET_NAME }}
          script: |
            const { repo: { owner, repo }, ref } = context;
            
            // Get all branches
            const branches = await github.paginate(github.rest.repos.listBranches, {
              owner,
              repo
            });
            
            // define the branches to be excluded - temporary fix until we move these envs to GD
            const excludedBranches = ["cas-develop", "apl-develop"];
            
            // First, filter branches that start with 'hdev-' and aren't excluded
            const eligibleBranches = branches.filter(branch => 
              branch.name.startsWith('hdev-') && 
              !excludedBranches.includes(branch.name)
            );
            
            console.log(`Eligible branches: ${eligibleBranches.map(b => b.name).join(', ')}`);
            
            // Get all open PRs
            const openPRs = await github.paginate(github.rest.pulls.list, {
              owner,
              repo,
              state: 'open'
            });
            
            // Create a map of branch names to their open PRs
            const branchPRMap = {};
            openPRs.forEach(pr => {
              if (!branchPRMap[pr.base.ref]) {
                branchPRMap[pr.base.ref] = [];
              }
              branchPRMap[pr.base.ref].push(pr);
            });
            
            // Filter branches that have open PRs
            const branchesWithOpenPRs = eligibleBranches.filter(branch => 
              branchPRMap[branch.name] && branchPRMap[branch.name].length > 0
            );
            
            console.log(`Branches with open PRs: ${branchesWithOpenPRs.map(b => b.name).join(', ')}`);
            
            // For each branch with open PRs, trigger the merge-back workflow
            for (const { name } of branchesWithOpenPRs) {
              console.log(`Triggering merge back workflow for branch ${name}`);
              await github.rest.actions.createWorkflowDispatch({
                owner,
                repo,
                workflow_id: '.github/workflows/merge-back.yml',
                ref: ref.replace('refs/heads/', ''),
                inputs: { 'target-branch': name, 'assignee': "${{ github.actor }}" },
              });
            }
